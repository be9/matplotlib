@header@
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="matplotlib.html"><font color="#ffffff">matplotlib</font></a>.patches</strong></big></big></font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/usr/local/lib/python2.3/site-packages/matplotlib/patches.py">/usr/local/lib/python2.3/site-packages/matplotlib/patches.py</a></font></td></tr></table>
    <p></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ee77aa">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
    
<tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl>
<dt><font face="helvetica, arial"><a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.patches.html#Patch">Patch</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.patches.html#Polygon">Polygon</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.patches.html#Rectangle">Rectangle</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.patches.html#RegularPolygon">RegularPolygon</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.patches.html#Circle">Circle</a>
</font></dt></dl>
</dd>
</dl>
</dd>
</dl>
</dd>
</dl>
 <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Circle">class <strong>Circle</strong></a>(<a href="matplotlib.patches.html#RegularPolygon">RegularPolygon</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>A&nbsp;circle&nbsp;patch<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.patches.html#Circle">Circle</a></dd>
<dd><a href="matplotlib.patches.html#RegularPolygon">RegularPolygon</a></dd>
<dd><a href="matplotlib.patches.html#Patch">Patch</a></dd>
<dd><a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="Circle-__init__"><strong>__init__</strong></a>(self, xy, radius<font color="#909090">=5</font>, edgecolor<font color="#909090">='k'</font>, facecolor<font color="#909090">='b'</font>, fill<font color="#909090">=1</font>, resolution<font color="#909090">=20</font>)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.patches.html#RegularPolygon">RegularPolygon</a>:<br>
<dl><dt><a name="Circle-get_verts"><strong>get_verts</strong></a>(self)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.patches.html#Patch">Patch</a>:<br>
<dl><dt><a name="Circle-copy_properties"><strong>copy_properties</strong></a>(self, other)</dt></dl>

<dl><dt><a name="Circle-draw"><strong>draw</strong></a>(self, renderer)</dt></dl>

<dl><dt><a name="Circle-get_edgecolor"><strong>get_edgecolor</strong></a>(self)</dt></dl>

<dl><dt><a name="Circle-get_facecolor"><strong>get_facecolor</strong></a>(self)</dt></dl>

<dl><dt><a name="Circle-get_linewidth"><strong>get_linewidth</strong></a>(self)</dt></dl>

<dl><dt><a name="Circle-get_window_extent"><strong>get_window_extent</strong></a>(self, renderer<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="Circle-set_edgecolor"><strong>set_edgecolor</strong></a>(self, color)</dt></dl>

<dl><dt><a name="Circle-set_facecolor"><strong>set_facecolor</strong></a>(self, color)</dt></dl>

<dl><dt><a name="Circle-set_fill"><strong>set_fill</strong></a>(self, b)</dt></dl>

<dl><dt><a name="Circle-set_linewidth"><strong>set_linewidth</strong></a>(self, w)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><a name="Circle-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="Circle-get_clip_on"><strong>get_clip_on</strong></a>(self)</dt><dd><tt>Return&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="Circle-get_transform"><strong>get_transform</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Circle-get_visible"><strong>get_visible</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<dl><dt><a name="Circle-is_figure_set"><strong>is_figure_set</strong></a>(self)</dt></dl>

<dl><dt><a name="Circle-is_transform_set"><strong>is_transform_set</strong></a>(self)</dt><dd><tt><a href="matplotlib.artist.html#Artist">Artist</a>&nbsp;has&nbsp;transform&nbsp;explicity&nbsp;let</tt></dd></dl>

<dl><dt><a name="Circle-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="Circle-set_clip_box"><strong>set_clip_box</strong></a>(self, clipbox)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;Bbox</tt></dd></dl>

<dl><dt><a name="Circle-set_clip_on"><strong>set_clip_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="Circle-set_figure"><strong>set_figure</strong></a>(self, fig)</dt><dd><tt>Set&nbsp;the&nbsp;figure&nbsp;instance&nbsp;the&nbsp;artist&nbsp;belong&nbsp;to</tt></dd></dl>

<dl><dt><a name="Circle-set_lod"><strong>set_lod</strong></a>(self, on)</dt><dd><tt>Set&nbsp;Level&nbsp;of&nbsp;Detail&nbsp;on&nbsp;or&nbsp;off.&nbsp;&nbsp;If&nbsp;on,&nbsp;the&nbsp;artists&nbsp;may&nbsp;examine<br>
things&nbsp;like&nbsp;the&nbsp;pixel&nbsp;width&nbsp;of&nbsp;the&nbsp;axes&nbsp;and&nbsp;draw&nbsp;a&nbsp;subset&nbsp;of<br>
their&nbsp;contents&nbsp;accordingly</tt></dd></dl>

<dl><dt><a name="Circle-set_transform"><strong>set_transform</strong></a>(self, t)</dt><dd><tt>set&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Circle-set_visible"><strong>set_visible</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><strong>aname</strong> = 'Artist'</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Patch">class <strong>Patch</strong></a>(<a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>A&nbsp;patch&nbsp;is&nbsp;a&nbsp;2D&nbsp;thingy&nbsp;with&nbsp;a&nbsp;face&nbsp;color&nbsp;and&nbsp;an&nbsp;edge&nbsp;color<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="Patch-__init__"><strong>__init__</strong></a>(self, edgecolor<font color="#909090">='k'</font>, facecolor<font color="#909090">='b'</font>, fill<font color="#909090">=1</font>)</dt></dl>

<dl><dt><a name="Patch-copy_properties"><strong>copy_properties</strong></a>(self, other)</dt></dl>

<dl><dt><a name="Patch-draw"><strong>draw</strong></a>(self, renderer)</dt></dl>

<dl><dt><a name="Patch-get_edgecolor"><strong>get_edgecolor</strong></a>(self)</dt></dl>

<dl><dt><a name="Patch-get_facecolor"><strong>get_facecolor</strong></a>(self)</dt></dl>

<dl><dt><a name="Patch-get_linewidth"><strong>get_linewidth</strong></a>(self)</dt></dl>

<dl><dt><a name="Patch-get_verts"><strong>get_verts</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;vertices&nbsp;of&nbsp;the&nbsp;patch</tt></dd></dl>

<dl><dt><a name="Patch-get_window_extent"><strong>get_window_extent</strong></a>(self, renderer<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="Patch-set_edgecolor"><strong>set_edgecolor</strong></a>(self, color)</dt></dl>

<dl><dt><a name="Patch-set_facecolor"><strong>set_facecolor</strong></a>(self, color)</dt></dl>

<dl><dt><a name="Patch-set_fill"><strong>set_fill</strong></a>(self, b)</dt></dl>

<dl><dt><a name="Patch-set_linewidth"><strong>set_linewidth</strong></a>(self, w)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><a name="Patch-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="Patch-get_clip_on"><strong>get_clip_on</strong></a>(self)</dt><dd><tt>Return&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="Patch-get_transform"><strong>get_transform</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Patch-get_visible"><strong>get_visible</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<dl><dt><a name="Patch-is_figure_set"><strong>is_figure_set</strong></a>(self)</dt></dl>

<dl><dt><a name="Patch-is_transform_set"><strong>is_transform_set</strong></a>(self)</dt><dd><tt><a href="matplotlib.artist.html#Artist">Artist</a>&nbsp;has&nbsp;transform&nbsp;explicity&nbsp;let</tt></dd></dl>

<dl><dt><a name="Patch-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="Patch-set_clip_box"><strong>set_clip_box</strong></a>(self, clipbox)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;Bbox</tt></dd></dl>

<dl><dt><a name="Patch-set_clip_on"><strong>set_clip_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="Patch-set_figure"><strong>set_figure</strong></a>(self, fig)</dt><dd><tt>Set&nbsp;the&nbsp;figure&nbsp;instance&nbsp;the&nbsp;artist&nbsp;belong&nbsp;to</tt></dd></dl>

<dl><dt><a name="Patch-set_lod"><strong>set_lod</strong></a>(self, on)</dt><dd><tt>Set&nbsp;Level&nbsp;of&nbsp;Detail&nbsp;on&nbsp;or&nbsp;off.&nbsp;&nbsp;If&nbsp;on,&nbsp;the&nbsp;artists&nbsp;may&nbsp;examine<br>
things&nbsp;like&nbsp;the&nbsp;pixel&nbsp;width&nbsp;of&nbsp;the&nbsp;axes&nbsp;and&nbsp;draw&nbsp;a&nbsp;subset&nbsp;of<br>
their&nbsp;contents&nbsp;accordingly</tt></dd></dl>

<dl><dt><a name="Patch-set_transform"><strong>set_transform</strong></a>(self, t)</dt><dd><tt>set&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Patch-set_visible"><strong>set_visible</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><strong>aname</strong> = 'Artist'</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Polygon">class <strong>Polygon</strong></a>(<a href="matplotlib.patches.html#Patch">Patch</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>A&nbsp;general&nbsp;polygon&nbsp;patch.&nbsp;&nbsp;xy&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;x,y&nbsp;2&nbsp;tuples&nbsp;tuples<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.patches.html#Polygon">Polygon</a></dd>
<dd><a href="matplotlib.patches.html#Patch">Patch</a></dd>
<dd><a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="Polygon-__init__"><strong>__init__</strong></a>(self, xy, edgecolor<font color="#909090">='k'</font>, facecolor<font color="#909090">='b'</font>, fill<font color="#909090">=0</font>)</dt></dl>

<dl><dt><a name="Polygon-get_verts"><strong>get_verts</strong></a>(self)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.patches.html#Patch">Patch</a>:<br>
<dl><dt><a name="Polygon-copy_properties"><strong>copy_properties</strong></a>(self, other)</dt></dl>

<dl><dt><a name="Polygon-draw"><strong>draw</strong></a>(self, renderer)</dt></dl>

<dl><dt><a name="Polygon-get_edgecolor"><strong>get_edgecolor</strong></a>(self)</dt></dl>

<dl><dt><a name="Polygon-get_facecolor"><strong>get_facecolor</strong></a>(self)</dt></dl>

<dl><dt><a name="Polygon-get_linewidth"><strong>get_linewidth</strong></a>(self)</dt></dl>

<dl><dt><a name="Polygon-get_window_extent"><strong>get_window_extent</strong></a>(self, renderer<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="Polygon-set_edgecolor"><strong>set_edgecolor</strong></a>(self, color)</dt></dl>

<dl><dt><a name="Polygon-set_facecolor"><strong>set_facecolor</strong></a>(self, color)</dt></dl>

<dl><dt><a name="Polygon-set_fill"><strong>set_fill</strong></a>(self, b)</dt></dl>

<dl><dt><a name="Polygon-set_linewidth"><strong>set_linewidth</strong></a>(self, w)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><a name="Polygon-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="Polygon-get_clip_on"><strong>get_clip_on</strong></a>(self)</dt><dd><tt>Return&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="Polygon-get_transform"><strong>get_transform</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Polygon-get_visible"><strong>get_visible</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<dl><dt><a name="Polygon-is_figure_set"><strong>is_figure_set</strong></a>(self)</dt></dl>

<dl><dt><a name="Polygon-is_transform_set"><strong>is_transform_set</strong></a>(self)</dt><dd><tt><a href="matplotlib.artist.html#Artist">Artist</a>&nbsp;has&nbsp;transform&nbsp;explicity&nbsp;let</tt></dd></dl>

<dl><dt><a name="Polygon-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="Polygon-set_clip_box"><strong>set_clip_box</strong></a>(self, clipbox)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;Bbox</tt></dd></dl>

<dl><dt><a name="Polygon-set_clip_on"><strong>set_clip_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="Polygon-set_figure"><strong>set_figure</strong></a>(self, fig)</dt><dd><tt>Set&nbsp;the&nbsp;figure&nbsp;instance&nbsp;the&nbsp;artist&nbsp;belong&nbsp;to</tt></dd></dl>

<dl><dt><a name="Polygon-set_lod"><strong>set_lod</strong></a>(self, on)</dt><dd><tt>Set&nbsp;Level&nbsp;of&nbsp;Detail&nbsp;on&nbsp;or&nbsp;off.&nbsp;&nbsp;If&nbsp;on,&nbsp;the&nbsp;artists&nbsp;may&nbsp;examine<br>
things&nbsp;like&nbsp;the&nbsp;pixel&nbsp;width&nbsp;of&nbsp;the&nbsp;axes&nbsp;and&nbsp;draw&nbsp;a&nbsp;subset&nbsp;of<br>
their&nbsp;contents&nbsp;accordingly</tt></dd></dl>

<dl><dt><a name="Polygon-set_transform"><strong>set_transform</strong></a>(self, t)</dt><dd><tt>set&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Polygon-set_visible"><strong>set_visible</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><strong>aname</strong> = 'Artist'</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Rectangle">class <strong>Rectangle</strong></a>(<a href="matplotlib.patches.html#Patch">Patch</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Draw&nbsp;a&nbsp;rectangle&nbsp;with&nbsp;lower&nbsp;left&nbsp;at&nbsp;xy=(x,y)&nbsp;with&nbsp;specified<br>
width&nbsp;and&nbsp;height<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.patches.html#Rectangle">Rectangle</a></dd>
<dd><a href="matplotlib.patches.html#Patch">Patch</a></dd>
<dd><a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="Rectangle-__init__"><strong>__init__</strong></a>(self, xy, width, height, edgecolor<font color="#909090">='k'</font>, facecolor<font color="#909090">='b'</font>, fill<font color="#909090">=True</font>)</dt><dd><tt>xy&nbsp;is&nbsp;an&nbsp;x,y&nbsp;tuple&nbsp;lower,&nbsp;left<br>
&nbsp;<br>
width&nbsp;and&nbsp;height&nbsp;are&nbsp;width&nbsp;and&nbsp;height&nbsp;of&nbsp;rectangle<br>
&nbsp;<br>
fill&nbsp;is&nbsp;a&nbsp;boolean&nbsp;indicating&nbsp;whether&nbsp;to&nbsp;fill&nbsp;the&nbsp;rectangle</tt></dd></dl>

<dl><dt><a name="Rectangle-get_height"><strong>get_height</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;height&nbsp;of&nbsp;the&nbsp;rectangle</tt></dd></dl>

<dl><dt><a name="Rectangle-get_verts"><strong>get_verts</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;vertices&nbsp;of&nbsp;the&nbsp;rectangle</tt></dd></dl>

<dl><dt><a name="Rectangle-get_width"><strong>get_width</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;&nbsp;rectangle</tt></dd></dl>

<dl><dt><a name="Rectangle-get_x"><strong>get_x</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;left&nbsp;coord&nbsp;of&nbsp;the&nbsp;rectangle</tt></dd></dl>

<dl><dt><a name="Rectangle-get_y"><strong>get_y</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;bottom&nbsp;coord&nbsp;of&nbsp;the&nbsp;rectangle</tt></dd></dl>

<dl><dt><a name="Rectangle-set_bounds"><strong>set_bounds</strong></a>(self, l, b, w, h)</dt></dl>

<dl><dt><a name="Rectangle-set_height"><strong>set_height</strong></a>(self, h)</dt><dd><tt>Set&nbsp;the&nbsp;width&nbsp;rectangle</tt></dd></dl>

<dl><dt><a name="Rectangle-set_width"><strong>set_width</strong></a>(self, w)</dt><dd><tt>Set&nbsp;the&nbsp;width&nbsp;rectangle</tt></dd></dl>

<dl><dt><a name="Rectangle-set_x"><strong>set_x</strong></a>(self, x)</dt><dd><tt>Set&nbsp;the&nbsp;left&nbsp;coord&nbsp;of&nbsp;the&nbsp;rectangle</tt></dd></dl>

<dl><dt><a name="Rectangle-set_y"><strong>set_y</strong></a>(self, y)</dt><dd><tt>Set&nbsp;the&nbsp;bottom&nbsp;coord&nbsp;of&nbsp;the&nbsp;rectangle</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.patches.html#Patch">Patch</a>:<br>
<dl><dt><a name="Rectangle-copy_properties"><strong>copy_properties</strong></a>(self, other)</dt></dl>

<dl><dt><a name="Rectangle-draw"><strong>draw</strong></a>(self, renderer)</dt></dl>

<dl><dt><a name="Rectangle-get_edgecolor"><strong>get_edgecolor</strong></a>(self)</dt></dl>

<dl><dt><a name="Rectangle-get_facecolor"><strong>get_facecolor</strong></a>(self)</dt></dl>

<dl><dt><a name="Rectangle-get_linewidth"><strong>get_linewidth</strong></a>(self)</dt></dl>

<dl><dt><a name="Rectangle-get_window_extent"><strong>get_window_extent</strong></a>(self, renderer<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="Rectangle-set_edgecolor"><strong>set_edgecolor</strong></a>(self, color)</dt></dl>

<dl><dt><a name="Rectangle-set_facecolor"><strong>set_facecolor</strong></a>(self, color)</dt></dl>

<dl><dt><a name="Rectangle-set_fill"><strong>set_fill</strong></a>(self, b)</dt></dl>

<dl><dt><a name="Rectangle-set_linewidth"><strong>set_linewidth</strong></a>(self, w)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><a name="Rectangle-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="Rectangle-get_clip_on"><strong>get_clip_on</strong></a>(self)</dt><dd><tt>Return&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="Rectangle-get_transform"><strong>get_transform</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Rectangle-get_visible"><strong>get_visible</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<dl><dt><a name="Rectangle-is_figure_set"><strong>is_figure_set</strong></a>(self)</dt></dl>

<dl><dt><a name="Rectangle-is_transform_set"><strong>is_transform_set</strong></a>(self)</dt><dd><tt><a href="matplotlib.artist.html#Artist">Artist</a>&nbsp;has&nbsp;transform&nbsp;explicity&nbsp;let</tt></dd></dl>

<dl><dt><a name="Rectangle-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="Rectangle-set_clip_box"><strong>set_clip_box</strong></a>(self, clipbox)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;Bbox</tt></dd></dl>

<dl><dt><a name="Rectangle-set_clip_on"><strong>set_clip_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="Rectangle-set_figure"><strong>set_figure</strong></a>(self, fig)</dt><dd><tt>Set&nbsp;the&nbsp;figure&nbsp;instance&nbsp;the&nbsp;artist&nbsp;belong&nbsp;to</tt></dd></dl>

<dl><dt><a name="Rectangle-set_lod"><strong>set_lod</strong></a>(self, on)</dt><dd><tt>Set&nbsp;Level&nbsp;of&nbsp;Detail&nbsp;on&nbsp;or&nbsp;off.&nbsp;&nbsp;If&nbsp;on,&nbsp;the&nbsp;artists&nbsp;may&nbsp;examine<br>
things&nbsp;like&nbsp;the&nbsp;pixel&nbsp;width&nbsp;of&nbsp;the&nbsp;axes&nbsp;and&nbsp;draw&nbsp;a&nbsp;subset&nbsp;of<br>
their&nbsp;contents&nbsp;accordingly</tt></dd></dl>

<dl><dt><a name="Rectangle-set_transform"><strong>set_transform</strong></a>(self, t)</dt><dd><tt>set&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Rectangle-set_visible"><strong>set_visible</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><strong>aname</strong> = 'Artist'</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="RegularPolygon">class <strong>RegularPolygon</strong></a>(<a href="matplotlib.patches.html#Patch">Patch</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>A&nbsp;regular&nbsp;polygon&nbsp;patch.&nbsp;&nbsp;xy&nbsp;is&nbsp;a&nbsp;length&nbsp;2&nbsp;tuple&nbsp;(the&nbsp;center)<br>
numVertices&nbsp;is&nbsp;the&nbsp;number&nbsp;of&nbsp;vertices.&nbsp;&nbsp;Radius&nbsp;is&nbsp;the&nbsp;distance<br>
from&nbsp;the&nbsp;center&nbsp;to&nbsp;each&nbsp;of&nbsp;the&nbsp;vertices.&nbsp;&nbsp;Orientation&nbsp;is&nbsp;in<br>
radians&nbsp;and&nbsp;rotates&nbsp;the&nbsp;polygon.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.patches.html#RegularPolygon">RegularPolygon</a></dd>
<dd><a href="matplotlib.patches.html#Patch">Patch</a></dd>
<dd><a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="RegularPolygon-__init__"><strong>__init__</strong></a>(self, xy, numVertices, radius<font color="#909090">=5</font>, orientation<font color="#909090">=0</font>, edgecolor<font color="#909090">='k'</font>, facecolor<font color="#909090">='b'</font>, fill<font color="#909090">=1</font>)</dt></dl>

<dl><dt><a name="RegularPolygon-get_verts"><strong>get_verts</strong></a>(self)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.patches.html#Patch">Patch</a>:<br>
<dl><dt><a name="RegularPolygon-copy_properties"><strong>copy_properties</strong></a>(self, other)</dt></dl>

<dl><dt><a name="RegularPolygon-draw"><strong>draw</strong></a>(self, renderer)</dt></dl>

<dl><dt><a name="RegularPolygon-get_edgecolor"><strong>get_edgecolor</strong></a>(self)</dt></dl>

<dl><dt><a name="RegularPolygon-get_facecolor"><strong>get_facecolor</strong></a>(self)</dt></dl>

<dl><dt><a name="RegularPolygon-get_linewidth"><strong>get_linewidth</strong></a>(self)</dt></dl>

<dl><dt><a name="RegularPolygon-get_window_extent"><strong>get_window_extent</strong></a>(self, renderer<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="RegularPolygon-set_edgecolor"><strong>set_edgecolor</strong></a>(self, color)</dt></dl>

<dl><dt><a name="RegularPolygon-set_facecolor"><strong>set_facecolor</strong></a>(self, color)</dt></dl>

<dl><dt><a name="RegularPolygon-set_fill"><strong>set_fill</strong></a>(self, b)</dt></dl>

<dl><dt><a name="RegularPolygon-set_linewidth"><strong>set_linewidth</strong></a>(self, w)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><a name="RegularPolygon-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="RegularPolygon-get_clip_on"><strong>get_clip_on</strong></a>(self)</dt><dd><tt>Return&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="RegularPolygon-get_transform"><strong>get_transform</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="RegularPolygon-get_visible"><strong>get_visible</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<dl><dt><a name="RegularPolygon-is_figure_set"><strong>is_figure_set</strong></a>(self)</dt></dl>

<dl><dt><a name="RegularPolygon-is_transform_set"><strong>is_transform_set</strong></a>(self)</dt><dd><tt><a href="matplotlib.artist.html#Artist">Artist</a>&nbsp;has&nbsp;transform&nbsp;explicity&nbsp;let</tt></dd></dl>

<dl><dt><a name="RegularPolygon-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="RegularPolygon-set_clip_box"><strong>set_clip_box</strong></a>(self, clipbox)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;Bbox</tt></dd></dl>

<dl><dt><a name="RegularPolygon-set_clip_on"><strong>set_clip_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="RegularPolygon-set_figure"><strong>set_figure</strong></a>(self, fig)</dt><dd><tt>Set&nbsp;the&nbsp;figure&nbsp;instance&nbsp;the&nbsp;artist&nbsp;belong&nbsp;to</tt></dd></dl>

<dl><dt><a name="RegularPolygon-set_lod"><strong>set_lod</strong></a>(self, on)</dt><dd><tt>Set&nbsp;Level&nbsp;of&nbsp;Detail&nbsp;on&nbsp;or&nbsp;off.&nbsp;&nbsp;If&nbsp;on,&nbsp;the&nbsp;artists&nbsp;may&nbsp;examine<br>
things&nbsp;like&nbsp;the&nbsp;pixel&nbsp;width&nbsp;of&nbsp;the&nbsp;axes&nbsp;and&nbsp;draw&nbsp;a&nbsp;subset&nbsp;of<br>
their&nbsp;contents&nbsp;accordingly</tt></dd></dl>

<dl><dt><a name="RegularPolygon-set_transform"><strong>set_transform</strong></a>(self, t)</dt><dd><tt>set&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="RegularPolygon-set_visible"><strong>set_visible</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><strong>aname</strong> = 'Artist'</dl>

</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#eeaa77">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
    
<tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt><a name="-arange"><strong>arange</strong></a>(...)</dt><dd><tt><a href="#-arange">arange</a>(start,&nbsp;stop=None,&nbsp;step=1,&nbsp;typecode=None)<br>
&nbsp;<br>
&nbsp;Just&nbsp;like&nbsp;range()&nbsp;except&nbsp;it&nbsp;returns&nbsp;an&nbsp;array&nbsp;whose&nbsp;type&nbsp;can&nbsp;be<br>
specified&nbsp;by&nbsp;the&nbsp;keyword&nbsp;argument&nbsp;typecode.</tt></dd></dl>
 <dl><dt><a name="-array"><strong>array</strong></a>(...)</dt><dd><tt><a href="#-array">array</a>(sequence,&nbsp;typecode=None,&nbsp;copy=1,&nbsp;savespace=0)&nbsp;will&nbsp;return&nbsp;a&nbsp;new&nbsp;array&nbsp;formed&nbsp;from&nbsp;the&nbsp;given&nbsp;(potentially&nbsp;nested)&nbsp;sequence&nbsp;with&nbsp;type&nbsp;given&nbsp;by&nbsp;typecode.&nbsp;&nbsp;If&nbsp;no&nbsp;typecode&nbsp;is&nbsp;given,&nbsp;then&nbsp;the&nbsp;type&nbsp;will&nbsp;be&nbsp;determined&nbsp;as&nbsp;the&nbsp;minimum&nbsp;type&nbsp;required&nbsp;to&nbsp;hold&nbsp;the&nbsp;objects&nbsp;in&nbsp;sequence.&nbsp;&nbsp;If&nbsp;copy&nbsp;is&nbsp;zero&nbsp;and&nbsp;sequence&nbsp;is&nbsp;already&nbsp;an&nbsp;array,&nbsp;a&nbsp;reference&nbsp;will&nbsp;be&nbsp;returned.&nbsp;&nbsp;If&nbsp;savespace&nbsp;is&nbsp;nonzero,&nbsp;the&nbsp;new&nbsp;array&nbsp;will&nbsp;maintain&nbsp;its&nbsp;precision&nbsp;in&nbsp;operations.</tt></dd></dl>
 <dl><dt><a name="-bbox_artist"><strong>bbox_artist</strong></a>(artist, renderer)</dt><dd><tt>This&nbsp;is&nbsp;a&nbsp;debug&nbsp;function&nbsp;to&nbsp;draw&nbsp;a&nbsp;rectangle&nbsp;around&nbsp;the&nbsp;bounding<br>
box&nbsp;returned&nbsp;by&nbsp;get_window_extent&nbsp;of&nbsp;an&nbsp;artist,&nbsp;to&nbsp;test&nbsp;whether<br>
the&nbsp;artist&nbsp;is&nbsp;returning&nbsp;the&nbsp;correct&nbsp;bbox</tt></dd></dl>
 <dl><dt><a name="-draw_bbox"><strong>draw_bbox</strong></a>(bbox, renderer, color<font color="#909090">='k'</font>, trans<font color="#909090">=None</font>)</dt><dd><tt>This&nbsp;is&nbsp;a&nbsp;debug&nbsp;function&nbsp;to&nbsp;draw&nbsp;a&nbsp;rectangle&nbsp;around&nbsp;the&nbsp;bounding<br>
box&nbsp;returned&nbsp;by&nbsp;get_window_extent&nbsp;of&nbsp;an&nbsp;artist,&nbsp;to&nbsp;test&nbsp;whether<br>
the&nbsp;artist&nbsp;is&nbsp;returning&nbsp;the&nbsp;correct&nbsp;bbox</tt></dd></dl>
</td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>
    
<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><strong>False</strong> = False<br>
<strong>Float</strong> = 'd'<br>
<strong>True</strong> = True<br>
<strong>colorConverter</strong> = &lt;matplotlib.colors.ColorConverter instance&gt;<br>
<strong>cos</strong> = &lt;ufunc 'cos'&gt;<br>
<strong>division</strong> = _Feature((2, 2, 0, 'alpha', 2), (3, 0, 0, 'alpha', 0), 8192)<br>
<strong>pi</strong> = 3.1415926535897931<br>
<strong>sin</strong> = &lt;ufunc 'sin'&gt;</td></tr></table>
@footer@