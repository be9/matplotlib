@header@
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="matplotlib.html"><font color="#ffffff">matplotlib</font></a>.<a href="matplotlib.backends.html"><font color="#ffffff">backends</font></a>.backend_agg</strong></big></big></font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="/matplotlib/backends/backend_agg.py">/matplotlib/backends/backend_agg.py</a></font></td></tr></table>
    <p><tt>An&nbsp;agg&nbsp;<a href="http://antigrain.com/">http://antigrain.com/</a>&nbsp;backend<br>
&nbsp;<br>
Features&nbsp;that&nbsp;are&nbsp;implemented<br>
&nbsp;<br>
&nbsp;*&nbsp;capstyles&nbsp;and&nbsp;join&nbsp;styles<br>
&nbsp;*&nbsp;dashes<br>
&nbsp;*&nbsp;linewidth&nbsp;<br>
&nbsp;*&nbsp;lines,&nbsp;rectangles,&nbsp;ellipses<br>
&nbsp;*&nbsp;clipping&nbsp;to&nbsp;a&nbsp;rectangle<br>
&nbsp;*&nbsp;output&nbsp;to&nbsp;RGBA&nbsp;and&nbsp;PNG<br>
&nbsp;*&nbsp;alpha&nbsp;blending<br>
&nbsp;*&nbsp;DPI&nbsp;scaling&nbsp;properly&nbsp;-&nbsp;everything&nbsp;scales&nbsp;properly&nbsp;(dashes,&nbsp;linewidths,&nbsp;etc)<br>
&nbsp;*&nbsp;draw&nbsp;polygon&nbsp;<br>
&nbsp;*&nbsp;freetype2&nbsp;w/&nbsp;ft2font<br>
&nbsp;*&nbsp;using&nbsp;ttf_manager&nbsp;to&nbsp;get&nbsp;font<br>
&nbsp;<br>
TODO:<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;allow&nbsp;save&nbsp;to&nbsp;file&nbsp;handle<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;allow&nbsp;load&nbsp;from&nbsp;png<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;integrate&nbsp;screen&nbsp;dpi&nbsp;w/&nbsp;ppi&nbsp;and&nbsp;text<br>
&nbsp;&nbsp;<br>
INSTALLING&nbsp;<br>
&nbsp;<br>
&nbsp;&nbsp;REQUIREMENTs<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;python2.2+<br>
&nbsp;&nbsp;&nbsp;&nbsp;Numeric&nbsp;22+<br>
&nbsp;&nbsp;&nbsp;&nbsp;agg2&nbsp;(see&nbsp;below)<br>
&nbsp;&nbsp;&nbsp;&nbsp;freetype&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;libpng<br>
&nbsp;&nbsp;&nbsp;&nbsp;libz<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;Install&nbsp;AGG2&nbsp;(cut&nbsp;and&nbsp;paste&nbsp;below&nbsp;into&nbsp;xterm&nbsp;should&nbsp;work)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;wget&nbsp;<a href="http://www.antigrain.com/agg2.tar.gz">http://www.antigrain.com/agg2.tar.gz</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;tar&nbsp;xvfz&nbsp;agg2.tar.gz<br>
&nbsp;&nbsp;&nbsp;&nbsp;cd&nbsp;agg2<br>
&nbsp;&nbsp;&nbsp;&nbsp;make<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;(Optional)&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;make&nbsp;the&nbsp;examples:<br>
&nbsp;&nbsp;&nbsp;&nbsp;cd&nbsp;examples/X11<br>
&nbsp;&nbsp;&nbsp;&nbsp;make<br>
&nbsp;<br>
&nbsp;&nbsp;Installing&nbsp;backend_agg<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Edit&nbsp;setup.py:&nbsp;change&nbsp;aggsrc&nbsp;to&nbsp;point&nbsp;to&nbsp;the&nbsp;agg2&nbsp;src&nbsp;tree&nbsp;and<br>
&nbsp;&nbsp;&nbsp;replace&nbsp;if&nbsp;0:&nbsp;with&nbsp;if&nbsp;1:&nbsp;in&nbsp;the&nbsp;backend_agg&nbsp;section<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;Then&nbsp;just&nbsp;do&nbsp;the&nbsp;usual&nbsp;thing:&nbsp;python&nbsp;setup.py&nbsp;build<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;Please&nbsp;let&nbsp;me&nbsp;know&nbsp;if&nbsp;you&nbsp;encounter&nbsp;build&nbsp;problems,&nbsp;and&nbsp;tell&nbsp;me<br>
&nbsp;&nbsp;&nbsp;platform,&nbsp;gcc&nbsp;version,&nbsp;etc...&nbsp;&nbsp;Currently&nbsp;the&nbsp;paths&nbsp;in&nbsp;setupext.py<br>
&nbsp;&nbsp;&nbsp;assume&nbsp;as&nbsp;linux&nbsp;like&nbsp;filesystem&nbsp;(eg&nbsp;X11&nbsp;include&nbsp;dir,&nbsp;location&nbsp;of<br>
&nbsp;&nbsp;&nbsp;libttf,&nbsp;etcc)&nbsp;so&nbsp;you&nbsp;may&nbsp;need&nbsp;to&nbsp;tweak&nbsp;these<br>
&nbsp;<br>
&nbsp;&nbsp;Using&nbsp;agg&nbsp;backend<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;python&nbsp;somefile.py&nbsp;-dAgg&nbsp;&nbsp;&nbsp;<br>
&nbsp;<br>
&nbsp;&nbsp;or<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;matplotlib<br>
&nbsp;&nbsp;&nbsp;&nbsp;matplotlib.use('Agg')</tt></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#aa55cc">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
    
<tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="os.html">os</a><br>
</td><td width="25%" valign=top><a href="sys.html">sys</a><br>
</td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ee77aa">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
    
<tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_agg.html#FigureCanvasAgg">FigureCanvasAgg</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_agg.html#RendererAgg">RendererAgg</a>
</font></dt></dl>
</dd>
</dl>
 <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FigureCanvasAgg">class <strong>FigureCanvasAgg</strong></a>(<a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>The&nbsp;canvas&nbsp;the&nbsp;figure&nbsp;renders&nbsp;into.&nbsp;&nbsp;Calls&nbsp;the&nbsp;draw&nbsp;and&nbsp;print&nbsp;fig<br>
methods,&nbsp;creates&nbsp;the&nbsp;renderers,&nbsp;etc...<br>
&nbsp;<br>
Public&nbsp;attribute<br>
&nbsp;<br>
&nbsp;&nbsp;figure&nbsp;-&nbsp;A&nbsp;Figure&nbsp;instance<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="FigureCanvasAgg-draw"><strong>draw</strong></a>(self)</dt><dd><tt>Draw&nbsp;the&nbsp;figure&nbsp;using&nbsp;the&nbsp;renderer</tt></dd></dl>

<dl><dt><a name="FigureCanvasAgg-print_figure"><strong>print_figure</strong></a>(self, filename, dpi<font color="#909090">=150</font>, facecolor<font color="#909090">='w'</font>, edgecolor<font color="#909090">='w'</font>, orientation<font color="#909090">='portrait'</font>)</dt><dd><tt>Render&nbsp;the&nbsp;figure&nbsp;to&nbsp;hardcopy.&nbsp;&nbsp;Set&nbsp;the&nbsp;figure&nbsp;patch&nbsp;face&nbsp;and<br>
edge&nbsp;colors.&nbsp;&nbsp;This&nbsp;is&nbsp;useful&nbsp;because&nbsp;some&nbsp;of&nbsp;the&nbsp;GUIs&nbsp;have&nbsp;a<br>
gray&nbsp;figure&nbsp;face&nbsp;color&nbsp;background&nbsp;and&nbsp;you'll&nbsp;probably&nbsp;want&nbsp;to<br>
override&nbsp;this&nbsp;on&nbsp;hardcopy<br>
&nbsp;<br>
If&nbsp;the&nbsp;extension&nbsp;matches&nbsp;PNG,&nbsp;write&nbsp;a&nbsp;PNG&nbsp;file<br>
&nbsp;<br>
If&nbsp;the&nbsp;extension&nbsp;matches&nbsp;BMP&nbsp;or&nbsp;RAW,&nbsp;write&nbsp;an&nbsp;RGBA&nbsp;bitmap&nbsp;file</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>:<br>
<dl><dt><a name="FigureCanvasAgg-__init__"><strong>__init__</strong></a>(self, figure)</dt></dl>

<dl><dt><a name="FigureCanvasAgg-switch_backends"><strong>switch_backends</strong></a>(self, FigureCanvasClass)</dt><dd><tt>instantiate&nbsp;an&nbsp;instance&nbsp;of&nbsp;FigureCanvasClass<br>
&nbsp;<br>
This&nbsp;is&nbsp;used&nbsp;for&nbsp;backend&nbsp;switching,&nbsp;eg,&nbsp;to&nbsp;instantiate&nbsp;a<br>
FigureCanvasPS&nbsp;from&nbsp;a&nbsp;FigureCanvasGTK.&nbsp;&nbsp;Note,&nbsp;deep&nbsp;copying&nbsp;is<br>
not&nbsp;done,&nbsp;so&nbsp;any&nbsp;changes&nbsp;to&nbsp;one&nbsp;of&nbsp;the&nbsp;instances&nbsp;(eg,&nbsp;setting<br>
figure&nbsp;size&nbsp;or&nbsp;line&nbsp;props),&nbsp;will&nbsp;be&nbsp;reflected&nbsp;in&nbsp;the&nbsp;other</tt></dd></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="RendererAgg">class <strong>RendererAgg</strong></a>(<a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>The&nbsp;renderer&nbsp;handles&nbsp;all&nbsp;the&nbsp;drawing&nbsp;primitives&nbsp;using&nbsp;a&nbsp;graphics<br>
context&nbsp;instance&nbsp;that&nbsp;controls&nbsp;the&nbsp;colors/styles<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="RendererAgg-__init__"><strong>__init__</strong></a>(self, width, height, dpi)</dt></dl>

<dl><dt><a name="RendererAgg-compute_text_offsets"><strong>compute_text_offsets</strong></a>(self, t, props)</dt><dd><tt>Return&nbsp;the&nbsp;(x,y)&nbsp;offsets&nbsp;to&nbsp;adjust&nbsp;for&nbsp;the&nbsp;alignment<br>
specifications</tt></dd></dl>

<dl><dt><a name="RendererAgg-draw_arc"><strong>draw_arc</strong></a>(self, gcEdge, rgbFace, x, y, width, height, angle1, angle2)</dt><dd><tt>Draw&nbsp;an&nbsp;arc&nbsp;centered&nbsp;at&nbsp;x,y&nbsp;with&nbsp;width&nbsp;and&nbsp;height&nbsp;and&nbsp;angles<br>
from&nbsp;0.0&nbsp;to&nbsp;360.0<br>
&nbsp;<br>
If&nbsp;rgbFace&nbsp;is&nbsp;not&nbsp;None,&nbsp;fill&nbsp;the&nbsp;rectangle&nbsp;with&nbsp;that&nbsp;color.&nbsp;&nbsp;gcEdge<br>
is&nbsp;a&nbsp;GraphicsContext&nbsp;instance<br>
&nbsp;<br>
Currently,&nbsp;I'm&nbsp;only&nbsp;supporting&nbsp;ellipses,&nbsp;ie&nbsp;angle&nbsp;args&nbsp;are<br>
ignored</tt></dd></dl>

<dl><dt><a name="RendererAgg-draw_line"><strong>draw_line</strong></a>(self, gc, x1, y1, x2, y2)</dt><dd><tt>x&nbsp;and&nbsp;y&nbsp;are&nbsp;equal&nbsp;length&nbsp;arrays,&nbsp;draw&nbsp;lines&nbsp;connecting&nbsp;each<br>
point&nbsp;in&nbsp;x,&nbsp;y</tt></dd></dl>

<dl><dt><a name="RendererAgg-draw_mathtext"><strong>draw_mathtext</strong></a>(self, gc, x, y, t)</dt><dd><tt>Draw&nbsp;the&nbsp;math&nbsp;text&nbsp;using&nbsp;matplotlib.mathtext</tt></dd></dl>

<dl><dt><a name="RendererAgg-draw_point"><strong>draw_point</strong></a>(self, gc, x, y)</dt><dd><tt>Draw&nbsp;a&nbsp;single&nbsp;point&nbsp;at&nbsp;x,y</tt></dd></dl>

<dl><dt><a name="RendererAgg-draw_text"><strong>draw_text</strong></a>(self, gc, x, y, t)</dt><dd><tt>Render&nbsp;the&nbsp;text&nbsp;using&nbsp;the&nbsp;RendererPaint&nbsp;instance</tt></dd></dl>

<dl><dt><a name="RendererAgg-get_text_extent"><strong>get_text_extent</strong></a>(self, t)</dt><dd><tt>Return&nbsp;the&nbsp;ink&nbsp;extent&nbsp;of&nbsp;the&nbsp;text&nbsp;as&nbsp;Bound2D&nbsp;instance</tt></dd></dl>

<dl><dt><a name="RendererAgg-get_text_scale"><strong>get_text_scale</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;scale&nbsp;factor&nbsp;for&nbsp;fontsize&nbsp;taking&nbsp;screendpi&nbsp;and&nbsp;pixels&nbsp;per<br>
inch&nbsp;into&nbsp;account</tt></dd></dl>

<dl><dt><a name="RendererAgg-points_to_pixels"><strong>points_to_pixels</strong></a>(self, points)</dt><dd><tt>convert&nbsp;point&nbsp;measures&nbsp;to&nbsp;pixes&nbsp;using&nbsp;dpi&nbsp;and&nbsp;the&nbsp;pixels&nbsp;per<br>
inch&nbsp;of&nbsp;the&nbsp;display</tt></dd></dl>

<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>fontd</strong> = {}</dl>

<dl><dt><strong>mathfonts</strong> = {}</dl>

<dl><dt><strong>offsetd</strong> = {}</dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>:<br>
<dl><dt><a name="RendererAgg-draw_lines"><strong>draw_lines</strong></a>(self, gc, x, y)</dt><dd><tt>x&nbsp;and&nbsp;y&nbsp;are&nbsp;equal&nbsp;length&nbsp;arrays,&nbsp;draw&nbsp;lines&nbsp;connecting&nbsp;each<br>
point&nbsp;in&nbsp;x,&nbsp;y</tt></dd></dl>

<dl><dt><a name="RendererAgg-draw_polygon"><strong>draw_polygon</strong></a>(self, gcEdge, gcFace, points)</dt><dd><tt>Draw&nbsp;a&nbsp;polygon.&nbsp;&nbsp;points&nbsp;is&nbsp;a&nbsp;len&nbsp;vertices&nbsp;tuple,&nbsp;each&nbsp;element<br>
giving&nbsp;the&nbsp;x,y&nbsp;coords&nbsp;a&nbsp;vertex<br>
&nbsp;<br>
If&nbsp;gcFace&nbsp;is&nbsp;not&nbsp;None,&nbsp;fill&nbsp;the&nbsp;rectangle&nbsp;with&nbsp;it.&nbsp;&nbsp;gcEdge<br>
is&nbsp;a&nbsp;GraphicsContext&nbsp;instance</tt></dd></dl>

<dl><dt><a name="RendererAgg-draw_rectangle"><strong>draw_rectangle</strong></a>(self, gcEdge, gcFace, x, y, width, height)</dt><dd><tt>Draw&nbsp;a&nbsp;rectangle&nbsp;with&nbsp;lower&nbsp;left&nbsp;at&nbsp;x,y&nbsp;with&nbsp;width&nbsp;and&nbsp;height.<br>
&nbsp;<br>
If&nbsp;gcFace&nbsp;is&nbsp;not&nbsp;None,&nbsp;fill&nbsp;the&nbsp;rectangle&nbsp;with&nbsp;it.&nbsp;&nbsp;gcEdge<br>
is&nbsp;a&nbsp;GraphicsContext&nbsp;instance</tt></dd></dl>

<dl><dt><a name="RendererAgg-new_gc"><strong>new_gc</strong></a>(self)</dt><dd><tt>Return&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;GraphicsContextBase</tt></dd></dl>

</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#eeaa77">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
    
<tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt><a name="-FT2Font"><strong>FT2Font</strong></a>(...)</dt><dd><tt><a href="#-FT2Font">FT2Font</a>(ttffile)<br>
&nbsp;<br>
Create&nbsp;a&nbsp;new&nbsp;FT2Font&nbsp;object;&nbsp;the&nbsp;following&nbsp;global&nbsp;font&nbsp;attributes<br>
are&nbsp;defined<br>
num_faces&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;number&nbsp;of&nbsp;faces&nbsp;in&nbsp;file<br>
face_flags&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;face&nbsp;flags&nbsp;as&nbsp;python&nbsp;int<br>
style_flags&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;style&nbsp;flags&nbsp;as&nbsp;python&nbsp;int<br>
num_glyphs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;number&nbsp;of&nbsp;glyphs&nbsp;in&nbsp;the&nbsp;face<br>
family_name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;face&nbsp;family&nbsp;name<br>
style_name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;face&nbsp;syle&nbsp;name<br>
num_fixed_sizes&nbsp;&nbsp;#&nbsp;the&nbsp;number&nbsp;of&nbsp;embedded&nbsp;bitmap&nbsp;strikes&nbsp;in&nbsp;the&nbsp;current&nbsp;face<br>
&nbsp;<br>
#&nbsp;the&nbsp;following&nbsp;are&nbsp;only&nbsp;available&nbsp;if&nbsp;face.scalable<br>
bbox&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;face&nbsp;global&nbsp;bounding&nbsp;box&nbsp;(xmin,&nbsp;ymin,&nbsp;xmax,&nbsp;ymax)<br>
units_per_EM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;number&nbsp;of&nbsp;font&nbsp;units&nbsp;covered&nbsp;by&nbsp;the&nbsp;EM<br>
ascender&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;ascender&nbsp;in&nbsp;26.6&nbsp;units<br>
descender&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;descender&nbsp;in&nbsp;26.6&nbsp;units<br>
height&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;height&nbsp;in&nbsp;26.6&nbsp;units;&nbsp;used&nbsp;to&nbsp;compute&nbsp;a&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;spacing&nbsp;(i.e.,&nbsp;the&nbsp;baseline-to-baseline&nbsp;distance)&nbsp;&nbsp;<br>
max_advance_width&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;maximum&nbsp;horizontal&nbsp;cursor&nbsp;advance&nbsp;for&nbsp;all&nbsp;glyphs<br>
max_advance_height&nbsp;&nbsp;&nbsp;#&nbsp;same&nbsp;for&nbsp;vertical&nbsp;layout<br>
underline_position&nbsp;&nbsp;&nbsp;#&nbsp;vertical&nbsp;position&nbsp;of&nbsp;the&nbsp;underline&nbsp;bar<br>
underline_thickness&nbsp;&nbsp;#&nbsp;vertical&nbsp;thickness&nbsp;of&nbsp;the&nbsp;underline</tt></dd></dl>
 <dl><dt><a name="-array"><strong>array</strong></a>(...)</dt><dd><tt><a href="#-array">array</a>(sequence,&nbsp;typecode=None,&nbsp;copy=1,&nbsp;savespace=0)&nbsp;will&nbsp;return&nbsp;a&nbsp;new&nbsp;array&nbsp;formed&nbsp;from&nbsp;the&nbsp;given&nbsp;(potentially&nbsp;nested)&nbsp;sequence&nbsp;with&nbsp;type&nbsp;given&nbsp;by&nbsp;typecode.&nbsp;&nbsp;If&nbsp;no&nbsp;typecode&nbsp;is&nbsp;given,&nbsp;then&nbsp;the&nbsp;type&nbsp;will&nbsp;be&nbsp;determined&nbsp;as&nbsp;the&nbsp;minimum&nbsp;type&nbsp;required&nbsp;to&nbsp;hold&nbsp;the&nbsp;objects&nbsp;in&nbsp;sequence.&nbsp;&nbsp;If&nbsp;copy&nbsp;is&nbsp;zero&nbsp;and&nbsp;sequence&nbsp;is&nbsp;already&nbsp;an&nbsp;array,&nbsp;a&nbsp;reference&nbsp;will&nbsp;be&nbsp;returned.&nbsp;&nbsp;If&nbsp;savespace&nbsp;is&nbsp;nonzero,&nbsp;the&nbsp;new&nbsp;array&nbsp;will&nbsp;maintain&nbsp;its&nbsp;precision&nbsp;in&nbsp;operations.</tt></dd></dl>
 <dl><dt><a name="-new_figure_manager"><strong>new_figure_manager</strong></a>(num, *args)</dt><dd><tt>Create&nbsp;a&nbsp;new&nbsp;figure&nbsp;manager&nbsp;instance</tt></dd></dl>
</td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>
    
<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><strong>False</strong> = False<br>
<strong>Float</strong> = 'd'<br>
<strong>PIXELS_PER_INCH</strong> = 96<br>
<strong>True</strong> = True<br>
<strong>division</strong> = _Feature((2, 2, 0, 'alpha', 2), (3, 0, 0, 'alpha', 0), 8192)<br>
<strong>fontManager</strong> = &lt;matplotlib.backends.ttf_font_manager.FontManager instance&gt;</td></tr></table>
@footer@